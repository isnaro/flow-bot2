const { ApplicationCommandOptionType, PermissionFlagsBits, ChannelType } = require("discord.js");

module.exports = {
  name: "vlock",
  description: "Locks the voice channel by revoking connect permission for @everyone",
  category: "UTILITY",
  botPermissions: [PermissionFlagsBits.ManageChannels],
  userPermissions: [PermissionFlagsBits.ManageChannels],
  command: {
    enabled: true,
    usage: "",
  },
  slashCommand: {
    enabled: true,
    options: [],
  },

  async messageRun(message, args) {
    const channel = message.channel;
    const roleID = "1226167494226608198";

    // Check if the user has ManageChannels permission or the specific role
    if (
      !message.member.permissions.has(PermissionFlagsBits.ManageChannels) &&
      !message.member.roles.cache.has(roleID)
    ) {
      return message.reply("You do not have the necessary permissions to use this command.");
    }

    if (channel.type !== ChannelType.GuildVoice) {
      return message.reply("This command can only be used in voice channels.");
    }

    try {
      // Lock voice channel by revoking CONNECT permission for @everyone
      await channel.permissionOverwrites.edit(message.guild.roles.everyone, {
        CONNECT: false,
      });

      await message.reply(`Voice channel ${channel.name} locked successfully.`);
    } catch (error) {
      console.error("Error locking voice channel:", error);
      await message.reply("Failed to lock the voice channel. Please try again later.");
    }
  },

  async interactionRun(interaction) {
    const channel = interaction.channel;
    const roleID = "1226167494226608198";

    // Check if the user has ManageChannels permission or the specific role
    if (
      !interaction.member.permissions.has(PermissionFlagsBits.ManageChannels) &&
      !interaction.member.roles.cache.has(roleID)
    ) {
      return interaction.reply({ content: "You do not have the necessary permissions to use this command.", ephemeral: true });
    }

    if (channel.type !== ChannelType.GuildVoice) {
      return interaction.reply({ content: "This command can only be used in voice channels.", ephemeral: true });
    }

    try {
      // Lock voice channel by revoking CONNECT permission for @everyone
      await channel.permissionOverwrites.edit(interaction.guild.roles.everyone, {
        CONNECT: false,
      });

      await interaction.reply(`Voice channel ${channel.name} locked successfully.`);
    } catch (error) {
      console.error("Error locking voice channel:", error);
      await interaction.reply({ content: "Failed to lock the voice channel. Please try again later.", ephemeral: true });
    }
  },
};
